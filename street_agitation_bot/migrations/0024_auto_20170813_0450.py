# -*- coding: utf-8 -*-a
# Generated by Django 1.10.5 on 2017-08-13 04:50
from __future__ import unicode_literals

from django.db import migrations


def generate_users_from_agitators(apps, schema_editor):
    AgitatorModel = apps.get_model('street_agitation_bot', 'Agitator')
    UserModel = apps.get_model('street_agitation_bot', 'User')
    user_by_telegram_id = dict()
    for agitator in AgitatorModel.objects.all():
        user = UserModel.objects.create(telegram_id=agitator.telegram_id,
                                        telegram=agitator.telegram,
                                        first_name=agitator.first_name,
                                        last_name=agitator.last_name,
                                        phone=agitator.phone,
                                        registration_date=agitator.registration_date,
                                        )
        user_by_telegram_id[agitator.telegram_id] = user
    for x in apps.get_model('street_agitation_bot', 'AgitatorInRegion').objects.all():
        x.agitator2_id = user_by_telegram_id[x.agitator_id].id
        x.save()
    for x in apps.get_model('street_agitation_bot', 'AgitationEvent').objects.all():
        x.master2_id = user_by_telegram_id[x.master_id].id
        x.save()
    for x in apps.get_model('street_agitation_bot', 'Storage').objects.all():
        x.holder2_id = user_by_telegram_id[x.holder_id].id
        x.save()
    for x in apps.get_model('street_agitation_bot', 'AgitationEventParticipant').objects.all():
        x.agitator2_id = user_by_telegram_id[x.agitator_id].id
        x.save()
    # for x in apps.get_model('street_agitation_bot', 'ConversationState').objects.all():
    #     if x.agitator_id:
    #         x.agitator2_id = user_by_telegram_id[x.agitator_id].id
    #         x.save()


class Migration(migrations.Migration):

    dependencies = [
        ('street_agitation_bot', '0023_auto_20170813_0448'),
    ]

    operations = [
        migrations.RunPython(generate_users_from_agitators, migrations.RunPython.noop),
    ]
